;lame
a: b: 
export a
export a, b
push #1
push $2
push "string"
push $1

export assign
;assign() { a = 1; }
assign: pushn #1
	push #1
	push #1
	callb @=
	ret #0


;item()
;{
;	i = object();
;	i.name = "nazwa";
;	i.value = 123 + !57 % 3;
;}

item:	pushn #1
	callb object
	pop $1
	push "nazwa"
	push "name"
	push $1
	callb []
	callb =
	popn #1
	push #123
	push #3
	push #57
	callb !
	callb %
	callb +
	push "value"
	push $1
	callb []
	callb =
	popn #1
	ret #0

export item


;onHit(item, target)
;{
;        item.__onHit(item, target);
;	// 1d10 hp/round for 10 rounds
;	poison = damage_create("1d10", "poison", 5);
;        add_effect(target, poison);
;}

onHit:	pushn #1
	push $-2 ;target
	push $-1 ;item
	push "__onHit"
	push $-1
	callb []
	pusha #2,#0
	callb () ; how should I move SP?
	push #5
	push "poison"
	push "1d10"
	pusha #3, #1
	callg damage_create
	push $1 ; poison
	callb =
	pushn #-1
	push $1
	push $-2
	pusha #2,#0
	callg add_effect
	ret #0

;fib(n)
;{
;	if (n == 0 || n == 1)
;		return 1;
;	else
;		return fib(n - 1) + fin(n - 2);
;}

fib:	push $-1
	push #0
	callb ==
	jnz L1
	push $-1
	push #1
	callb ==
	jnz L1
	push #1
	push $-1
	callb -
	pusha #1, #1
	call fib
	push #2
	push $-1
	callb -
	pusha #1, #1
	call fib
	call +
	ret #1
L1:	push #1
	ret #1

;fib2(n)
;{
;	a = 1;
;	b = 1;
;	while (n > 0) {
		a, b = a + b, a;
;		n = n - 1;	
;	}
;	return a;
;}

fib2:	pushn #2
	push #1
	pop $1
	push #1
	pop $2
	push $-1
L1:	push #0
	callb >
	jz L2
	push $1
	push $1
	push $2
	callb +
	pop $1
	pop $2
	push $-1
	push #1
	callb +
	pop $-1
	jmp L1
L2:	push $1
	ret #1
